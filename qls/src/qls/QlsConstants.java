/* Generated By:JavaCC: Do not edit this line. QlsConstants.java */
package qls;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface QlsConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int USE = 7;
  /** RegularExpression Id. */
  int IF = 8;
  /** RegularExpression Id. */
  int THEN = 9;
  /** RegularExpression Id. */
  int WHILE = 10;
  /** RegularExpression Id. */
  int DO = 11;
  /** RegularExpression Id. */
  int END = 12;
  /** RegularExpression Id. */
  int LOCAL = 13;
  /** RegularExpression Id. */
  int CREATE = 14;
  /** RegularExpression Id. */
  int NEW = 15;
  /** RegularExpression Id. */
  int TO = 16;
  /** RegularExpression Id. */
  int SET = 17;
  /** RegularExpression Id. */
  int PROCEED = 18;
  /** RegularExpression Id. */
  int MAIN = 19;
  /** RegularExpression Id. */
  int GLOBAL = 20;
  /** RegularExpression Id. */
  int ME = 21;
  /** RegularExpression Id. */
  int GETFROM = 22;
  /** RegularExpression Id. */
  int RETURN = 23;
  /** RegularExpression Id. */
  int CMD = 24;
  /** RegularExpression Id. */
  int INT = 25;
  /** RegularExpression Id. */
  int STRING = 26;
  /** RegularExpression Id. */
  int FUNCTION = 27;
  /** RegularExpression Id. */
  int VARARRAY = 28;
  /** RegularExpression Id. */
  int DOT = 29;
  /** RegularExpression Id. */
  int COLON = 30;
  /** RegularExpression Id. */
  int COMMA = 31;
  /** RegularExpression Id. */
  int ARROW = 32;
  /** RegularExpression Id. */
  int EQ = 33;
  /** RegularExpression Id. */
  int GT = 34;
  /** RegularExpression Id. */
  int LT = 35;
  /** RegularExpression Id. */
  int GE = 36;
  /** RegularExpression Id. */
  int LE = 37;
  /** RegularExpression Id. */
  int NE = 38;
  /** RegularExpression Id. */
  int PLUS = 39;
  /** RegularExpression Id. */
  int MINUS = 40;
  /** RegularExpression Id. */
  int MUL = 41;
  /** RegularExpression Id. */
  int DIV = 42;
  /** RegularExpression Id. */
  int MOD = 43;
  /** RegularExpression Id. */
  int AND = 44;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 45;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 46;
  /** RegularExpression Id. */
  int HEX_LITERAL = 47;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 48;
  /** RegularExpression Id. */
  int STRING_LITERAL = 49;
  /** RegularExpression Id. */
  int IDENTIFIER = 50;
  /** RegularExpression Id. */
  int LETTER = 51;
  /** RegularExpression Id. */
  int DIGIT = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"use\"",
    "\"if\"",
    "\"then\"",
    "\"while\"",
    "\"do\"",
    "\"end\"",
    "\"local\"",
    "\"create\"",
    "\"new\"",
    "\"to\"",
    "\"set\"",
    "\"proceed\"",
    "\"main\"",
    "\"global\"",
    "\"me\"",
    "\"getfrom\"",
    "\"return\"",
    "\"cmd\"",
    "\"int\"",
    "\"string\"",
    "\"function\"",
    "\"vararray\"",
    "\".\"",
    "\":\"",
    "\",\"",
    "\"->\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"<>\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"&\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"==\"",
    "\"!=\"",
  };

}
